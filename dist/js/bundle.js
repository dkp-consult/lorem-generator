(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _copyToClipboard = require("./copyToClipboard");
document.getElementById('numberOfParagraphs').addEventListener('click', function () {
  var numberOfParagraphs = document.getElementById('numberOfParagraphs').value;
  generateLoremIpsum(numberOfParagraphs);
});
document.getElementById('themeSelector').addEventListener('change', function () {
  var selectedTheme = document.getElementById('themeSelector').value;
  changeTheme(selectedTheme);
});
function changeTheme(theme) {
  var terminal = document.getElementById('output');
  switch (theme) {
    case 'default':
      terminal.style.backgroundColor = '#000';
      terminal.style.color = '#fff';
      break;
    case 'dark':
      terminal.style.backgroundColor = '#333';
      terminal.style.color = '#fff';
      break;
    case 'green':
      terminal.style.backgroundColor = '#006400';
      terminal.style.color = '#00ff00';
      break;
    default:
      break;
  }
}
var numberOfParagraphsValue = document.getElementById('numberOfParagraphsValue');
var loremIpsumText = "\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n";
function generateLoremIpsum(numberOfParagraphs) {
  var parsedParagraphs = parseInt(numberOfParagraphs);
  if (isNaN(parsedParagraphs) || parsedParagraphs <= 0) {
    alert('Veuillez entrer un nombre de paragraphes valide.');
    return;
  }
  var generatedText = '';
  for (var p = 0; p < parsedParagraphs; p++) {
    generatedText += "<p>".concat(loremIpsumText, "</p>");
  }
  var outputText = document.getElementById('output');
  outputText.innerHTML = generatedText;

  // Ajoute le bouton de copie avec un événement associé
  var copyButton = document.getElementById('copyButton');
  copyButton.addEventListener('click', function () {
    var copyText = document.getElementById('output');
    (0, _copyToClipboard.copyToClipboard)(copyText.innerText);
  });
}
// Ajoute un écouteur d'événements sur le slider pour générer automatiquement
document.getElementById('numberOfParagraphs').addEventListener('input', function () {
  var numberOfParagraphs = document.getElementById('numberOfParagraphs').value;
  generateLoremIpsum(numberOfParagraphs);
  numberOfParagraphsValue.textContent = numberOfParagraphs;
});

// Appelle la fonction une fois au chargement de la page pour générer avec la valeur initiale
var initialNumberOfParagraphs = document.getElementById('numberOfParagraphs').value;
generateLoremIpsum(initialNumberOfParagraphs);
numberOfParagraphsValue.textContent = initialNumberOfParagraphs;

},{"./copyToClipboard":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyToClipboard = copyToClipboard;
function copyToClipboard(text) {
  var textArea = document.createElement('textarea');
  textArea.value = text;
  document.body.appendChild(textArea);
  textArea.select();
  document.execCommand('copy');
  document.body.removeChild(textArea);
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
